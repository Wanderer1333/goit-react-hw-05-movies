{"version":3,"file":"static/js/387.ba11f06e.chunk.js","mappings":"4QAEaA,EAAiBC,EAAAA,GAAAA,GAAH,gSAadC,EAAiBD,EAAAA,GAAAA,GAAH,0H,SCsC3B,EA/Ca,WACX,OAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAO,mCAAG,8GAEWC,EAAAA,EAAAA,IAAgBJ,GAF3B,OAENK,EAFM,OAIZN,EAAaM,GAJD,gDAMZC,QAAQC,IAAI,KAAMC,SANN,yDAAH,qDASbL,GAXoB,CAYrB,GAAE,CAACH,IAIJ,OACE,0BACE,SAACN,EAAD,UACGI,EAAUW,MAAQX,EAAUW,KAAKC,OAAS,EACzCZ,EAAUW,KAAKE,KAAI,SAAAF,GAAI,OACrB,UAACb,EAAD,YACE,gBACEgB,IACEH,EAAKI,aAAL,yCACsCJ,EAAKI,cAXxC,sDAcLC,IAAKL,EAAKM,QAEZ,wBAAKN,EAAKM,QACV,yBAAG,cAAYN,EAAKO,eAVDP,EAAKQ,GADL,KAevB,uBAAG,mCAKZ,C,+LCjDKC,EAAW,gCACXC,EAAU,mCAEHC,EAAc,mCAAG,+GAEHC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAHjB,uBAElBG,EAFkB,EAElBA,KAFkB,kBAKnBA,EAAKC,SALc,sCAOpB,IAAIC,MAAM,qCAPU,yDAAH,qDAWdC,EAAiB,mCAAG,WAAOC,EAAOC,GAAd,kGAENN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BO,EAD/B,iBAC6CC,IAHvC,uBAErBL,EAFqB,EAErBA,KAFqB,kBAKtBA,EAAKC,SALiB,sCAOvB,IAAIC,MAAM,gBAPa,yDAAH,wDAWjBI,EAAe,mCAAG,WAAMC,GAAN,kGAEJR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDW,EADC,oBACmBV,IAHf,uBAEnBG,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,sCAOrB,IAAIE,MAAM,2BAPW,yDAAH,sDAWfpB,EAAe,mCAAG,WAAMyB,GAAN,kGAEJR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDW,EADC,4BAC2BV,IAHvB,uBAEnBG,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,sCAOrB,IAAIE,MAAM,gBAPW,yDAAH,sDAWfM,EAAe,mCAAG,WAAMD,GAAN,kGAEJR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDW,EADC,4BAC2BV,IAHvB,uBAEnBG,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,sCAOrB,IAAIE,MAAM,iBAPW,yDAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledCatsList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n  grid-gap: 40px;\n  margin-top: 60px;\n  margin-bottom: 0;\n  padding: 0 16px;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const StyledListItem = styled.li`\n  padding: 8px;\n  border: 1px solid blue;\n  border-radius: 10px;\n  background-color: #b4bffb;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { getMovieCredits } from 'services/api';\nimport { useParams } from 'react-router-dom';\n\nimport { StyledCatsList, StyledListItem } from './Cast.styled';\n\nconst Cast = () => {\n  const [castNames, setCastNames] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const getCast = async () => {\n      try {\n        const castData = await getMovieCredits(movieId);\n\n        setCastNames(castData);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  const defaultImg = 'https://cdn-icons-png.flaticon.com/256/21/21104.png';\n\n  return (\n    <div>\n      <StyledCatsList>\n        {castNames.cast && castNames.cast.length > 0 ? (\n          castNames.cast.map(cast => (\n            <StyledListItem key={cast.id}>\n              <img\n                src={\n                  cast.profile_path\n                    ? `https://image.tmdb.org/t/p/w200${cast.profile_path}`\n                    : defaultImg\n                }\n                alt={cast.name}\n              />\n              <h3>{cast.name}</h3>\n              <p>Character: {cast.character}</p>\n            </StyledListItem>\n          ))\n        ) : (\n          <p>Loading cast information...</p>\n        )}\n      </StyledCatsList>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '19c3c1131366dcbffe75fc92ac012355';\n\nexport const getMovieTrends = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return data.results;\n  } catch (error) {\n    throw new Error('Ooops Error. No movies to display');\n  }\n};\n\nexport const getMoviesForQuery = async (query, page) => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n    );\n    return data.results;\n  } catch (error) {\n    throw new Error('Ooops Error.');\n  }\n};\n\nexport const getMovieDetails = async moviesId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${moviesId}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    throw new Error('Ooops Error. No details');\n  }\n};\n\nexport const getMovieCredits = async moviesId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${moviesId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    throw new Error('Ooops Error.');\n  }\n};\n\nexport const getMovieReviews = async moviesId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${moviesId}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    throw new Error('Ooops Error. ');\n  }\n};\n"],"names":["StyledCatsList","styled","StyledListItem","useState","castNames","setCastNames","movieId","useParams","useEffect","getCast","getMovieCredits","castData","console","log","message","cast","length","map","src","profile_path","alt","name","character","id","BASE_URL","API_KEY","getMovieTrends","axios","data","results","Error","getMoviesForQuery","query","page","getMovieDetails","moviesId","getMovieReviews"],"sourceRoot":""}