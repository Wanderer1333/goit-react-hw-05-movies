{"version":3,"file":"static/js/186.96b94d42.chunk.js","mappings":"yNAwCA,UApCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAS,mCAAG,8GAEYC,EAAAA,EAAAA,IAAgBJ,GAF5B,OAERK,EAFQ,OAGdC,QAAQC,IAAI,YAAaP,GAEzBD,EAAWM,EAAYG,SALT,gDAOdF,QAAQC,IAAI,KAAME,SAPJ,yDAAH,qDAWfN,GAboB,CAcrB,GAAE,CAACH,KAGF,wBACGF,GAAWA,EAAQY,OAAS,EAC3BZ,EAAQa,KAAI,SAAAC,GAAM,OAChB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GADA,KAOlB,uBAAG,+CAIV,C,+LCrCKC,EAAW,gCACXC,EAAU,mCAEHC,EAAc,mCAAG,+GAEHC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAHjB,uBAElBG,EAFkB,EAElBA,KAFkB,kBAKnBA,EAAKZ,SALc,sCAOpB,IAAIa,MAAM,qCAPU,yDAAH,qDAWdC,EAAiB,mCAAG,WAAOC,EAAOC,GAAd,kGAENL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BM,EAD/B,iBAC6CC,IAHvC,uBAErBJ,EAFqB,EAErBA,KAFqB,kBAKtBA,EAAKZ,SALiB,sCAOvB,IAAIa,MAAM,gBAPa,yDAAH,wDAWjBI,EAAe,mCAAG,WAAMC,GAAN,kGAEJP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,oBACmBT,IAHf,uBAEnBG,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,sCAOrB,IAAIC,MAAM,2BAPW,yDAAH,sDAWfM,EAAe,mCAAG,WAAMD,GAAN,kGAEJP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BAC2BT,IAHvB,uBAEnBG,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,sCAOrB,IAAIC,MAAM,gBAPW,yDAAH,sDAWfjB,EAAe,mCAAG,WAAMsB,GAAN,kGAEJP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BAC2BT,IAHvB,uBAEnBG,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,sCAOrB,IAAIC,MAAM,iBAPW,yDAAH,qD","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'services/api';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const getReview = async () => {\n      try {\n        const reviewsData = await getMovieReviews(movieId);\n        console.log('Movie ID:', movieId);\n\n        setReviews(reviewsData.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    getReview();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews && reviews.length > 0 ? (\n        reviews.map(review => (\n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </ul>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '19c3c1131366dcbffe75fc92ac012355';\n\nexport const getMovieTrends = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return data.results;\n  } catch (error) {\n    throw new Error('Ooops Error. No movies to display');\n  }\n};\n\nexport const getMoviesForQuery = async (query, page) => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n    );\n    return data.results;\n  } catch (error) {\n    throw new Error('Ooops Error.');\n  }\n};\n\nexport const getMovieDetails = async moviesId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${moviesId}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    throw new Error('Ooops Error. No details');\n  }\n};\n\nexport const getMovieCredits = async moviesId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${moviesId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    throw new Error('Ooops Error.');\n  }\n};\n\nexport const getMovieReviews = async moviesId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${moviesId}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    throw new Error('Ooops Error. ');\n  }\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getReview","getMovieReviews","reviewsData","console","log","results","message","length","map","review","author","content","id","BASE_URL","API_KEY","getMovieTrends","axios","data","Error","getMoviesForQuery","query","page","getMovieDetails","moviesId","getMovieCredits"],"sourceRoot":""}